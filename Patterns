#PRINTING SOLID RECTANGLE

#include<iostream>
using namespace std;


int main(){
    
    int i = 1;
    while(i<=5-2){
        int j = 1;
        while(j<=5){
            j++;
            cout<<"*";
        }
        cout<<endl;
        i++;
                    
    }
}

OUTPUT =>
*****
*****
*****
------------------------------------------------------------------------------------------------------------------------
#PRINTING SQUARE PATTERN

#include<iostream>
using namespace std;

int main(){

    int i = 1;
    while(i<=4){
        int j = 1;
        while(j<=4){
            j++;
            cout<<"*";
        }
        cout<<endl;
        i++;
                    
    }
}
OUTPUT =>

****
****
****
****
----------------------------------------------------------------------------------------------------------------------
#PRINTING HOLLOW RECTANGLE 

#include <iostream>
using namespace std;

int main() {
  
  int size = 5;
  for (int i = 0; i < size; i++) {
    for (int j = 0; j < size; j++) {
      if (i == 0 || i == size - 1) {
        cout << "*";
      }
      else {
        if (j == 0 || j == size - 1) {
          cout << "*";
        }
        else {
          cout << " ";
        }
      }
    }
    cout << "\n";
  }
  return 0;
}

OUTPUT =>
*****
*   *
*   *
*   *
*****
------------------------------------------------------------------------------------------------------------------------
#PRINTING HALF PYRAMID

#include <iostream>
using namespace std;

int main() {
  int size = 6;
  for (int i = 0; i < size; i++) {
    for (int j = 0; j <= i; j++) {
      cout << "*";
    }
    cout << "\n";
  }
  return 0;
}

OUTPUT =>

*
**
***
****
*****
******
-----------------------------------------------------------------------------------------------------------------------------
#PRINTING INVERTED HALF PYRAMID

#include <iostream>
using namespace std;

int main() {
  int size = 6;
  for (int i = 0; i < size; i++) {
    for (int j = 0; j < size - i; j++) {
      cout << "*";
    }
    cout << "\n";
  }
  return 0;
}

OUTPUT =>

******
*****
****
***
**
*
--------------------------------------------------------------------------------------------------------------------------------
#PRINTING NUMERICAL HALF PYRAMID

#include <iostream>
using namespace std;

int main() {

    int rows = 5;
    for(int i = 1; i <= rows; ++i) {
        for(int j = 1; j <= i; ++j) {
            cout << j << " ";
        }
        cout << "\n";
    }
    return 0;
}

OUTPUT =>

1 
1 2 
1 2 3 
1 2 3 4 
1 2 3 4 5 
----------------------------------------------------------------------------------------------------------------------------------
#PRINTING INVERTED NUMERICAL HALF PYRAMID

#include <iostream>
using namespace std;

int main() {

    int rows = 5;
    for(int i = rows; i >= 1; --i) {
        for(int j = 1; j <= i; ++j) {
            cout << j << " ";
        }
        cout << "\n";
    }
    return 0;
}

OUTPUT =>

1 2 3 4 5 
1 2 3 4 
1 2 3 
1 2 
1 
---------------------------------------------------------------------------------------------------------------------------------------
#PRINTING FULL PYRAMID

#include<iostream>
using namespace std;


int main(){
    int n=6,j;
    for (int i =1;i<=n;i++){
        for (j=1;j<=n;j++){
            if(j<=n-i){
                cout<<" ";
            }
            else{
                cout<<"*";
            }
        }
        for(j=i-1;j>=1;j--)
        {
            cout<<"*";
        }
        cout<<endl;
        }
    }

OUTPUT =>

     *
    ***
   *****
  *******
 *********
***********
------------------------------------------------------------------------------------------------------------------------------------------
#PRINTING INVERTED FULL PYRAMID

#include <iostream>
using namespace std;

int main() {

    int n = 6;

    for(int i = n; i >= 1; --i) {
        for(int space = 0; space < n-i; ++space)
            cout << "  ";

        for(int j = i; j <= 2*i-1; ++j)
            cout << "* ";

        for(int j = 0; j < i-1; ++j)
            cout << "* ";

        cout << endl;
    }

    return 0;
}

OUTPUT =>

* * * * * * * * * * * 
  * * * * * * * * * 
    * * * * * * * 
      * * * * * 
        * * * 
          * 
----------------------------------------------------------------------------------------------------------------------
HOLLOW DIAMOND 

#include <iostream>
using namespace std;

int main() {
  int size = 5;

  for (int i = 1; i <= size; i++) {

    for (int j = size; j > i; j--) {
      cout << " ";
    }

    for (int k = 0; k < i * 2 - 1; k++) {
      if (k == 0 || k == 2 * i - 2) {
        cout << "*";
      }
      else {
        cout << " ";
      }
    }
    cout << "\n";
  }

  for (int i = 1; i < size; i++) {

    for (int j = 0; j < i; j++) {
      cout << " ";
    }

    for (int k = (size - i) * 2 - 1; k >= 1; k--) {
      if (k == 1 || k == (size - i) * 2 - 1) {
        cout << "*";
      }
      else {
        cout << " ";
      }
    }
    cout << "\n";
  }
  return 0;
}

OUTPUT ->

    *
   * *
  *   *
 *     *
*       *
 *     *
  *   *
   * *
    *
------------------------------------------------------------------------------------------------------------------
FLIPPED SOLID DIAMOND 

#include <iostream>
using namespace std; 
int main()
{
    int i, j, n;
    cin >> n;
    
    for(i = 0; i < n; i++)
    {
        for(j = 0; j < (2 * n); j++)
        {
            if(i + j <= n - 1)
                cout << "*";
            else
                cout << " ";
            if((i + n) <= j) 
                cout << "*";
            else
                cout << " ";
        }
        cout << "\n";
    }
   
    for(i = 0; i < n; i++)
    {
        for(j = 0; j < (2 * n); j++)
        {
            if(i >= j) 
                cout << "*";
            else
                cout << " ";
            if(i >= (2 * n - 1) - j) 
                cout << "*";
            else
                cout << " ";
        }
        cout << "\n";
    }
    return 0;
}
 output->
 5
* * * * *  * * * * *
* * * *      * * * *
* * *          * * *
* *              * *
*                  *
*                  *
* *              * *
* * *          * * *
* * * *      * * * *
* * * * *  * * * * *
--------------------------------------------------------------------------------------------------------------------------------------------------
FANCY PATTERN 

#include <iostream>

using namespace std;

int main()

{

int i,j,k,N,count=0;

cin >> N;

for(i=1;i<=N;i++)

{

k=1;

for(j=0;j<i;j++)

{

cout << i;

if(k<i)

{

cout << "*";

k=k+1;

}

}

cout << endl;

}

for(i=N;i>0;i--)

{

k=1;

for(j=0;j<i;j++)

{

cout << i;

if(k<i)

{

cout << "*";

k=k+1;

}

}

cout << endl;

}

return 0;

}

OUTPUT ->
4

1
2*2
3*3*3
4*4*4*4
4*4*4*4
3*3*3
2*2
1
---------------------------------------------------------------------------------------------------------------------------------------------
ALPHABET PALINDROME PYRAMID 

#include<iostream>
#include<stdlib.h>
using namespace std;
int main()
{
int i,j,k,l,n;
cout << "Enter the number of rows : ";
cin >> n;
for(i = 1; i <= n; i++)
{
for(k = 1; k <= i; k++)
{
cout << char(k+65-1) << "  ";
}
for(l = i-1; l >= 1; l--)
{
cout << char(l+65-1) << ” “;
}
cout << endl;
}
return 0;
}

OUTPUT ->

Enter the number of rows : 4
A  
A  B  A 
A  B  C  B A 
A  B  C  D  C B A 
--------------------------------------------------------------------------------------------------------------------------
SOLID DIAMOND

#include <iostream>
using namespace std;

int main()
{
	int n, c, k, space = 1;

	cout << "\nEnter the number of rows :" ;
	cin >> n;

	space = n - 1;

	for (k = 1; k <= n; k++)
	{
		for (c = 1; c <= space; c++)
			cout << " ";
      	space--;
		for (c = 1; c <= 2*k-1; c++)
			cout << "*";
		cout << endl;
}
	space = 1;
	for (k = 1; k <= n - 1; k++)
	{
		for (c = 1; c <= space; c++)
			cout << " ";
		space++;
		for (c = 1 ; c <= 2*(n-k)-1; c++)
          cout << "*";
		cout << endl;
	}
	return 0;
}

OUTPUT->

Enter the number of rows :4

   *
  ***
 *****
*******
 *****
  ***
   *
